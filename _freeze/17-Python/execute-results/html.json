{
  "hash": "d86b3ff3ab8c451f493835aa869589b1",
  "result": {
    "engine": "jupyter",
    "markdown": "* Le document qui suit n'est qu'un programme fait il y a 5 ans, et non repris depuis (mais ça marche. Utilisant très peu Python, je n'ai pas documenté les fonctions, qui ont été utilisées.\n\n* J'ai essayé de réglé tant bien que mal un bug d'affichage à partir de la proportionnalité des risques, qui conduisait à un affichage en pleine page. Cette section n'étant pas très développée, je n'ai pas trop insisté (l'accès à la table des matières n'est plus disponible sur la moitié du document).\n\n\n# Python\n\nDeux paquets d'analyse: principalement `lifelines` (km, cox, aft...) et `statsmodels``` (estimation logit en temps discret, kaplan-Meier, Cox).\n\nLe package `statsmodels` est également en mesure d'estimer des courbes de séjour de type Kaplan-Meier et des modèles à risque proportionnel de Cox. Le package `lifelines` couvre la quasi totalité des méthodes standards, à l'exception des risques concurrents. \n\nLe calcul des Rmst a été ajouté au package `lifelines` récemment. J'ai ajouté cette mise à jour.\n\n::: {#50e151d1 .cell execution_count=2}\n``` {.python .cell-code}\n# Penser à installer les packages: pip install nom_package\n\nimport numpy  as np\nimport pandas as pd\nimport patsy  as pt\nimport lifelines as lf\nimport matplotlib.pyplot as plt\nimport statsmodels as sm\n```\n:::\n\n\nChargement de la base\n\n::: {#b475fb3b .cell execution_count=3}\n``` {.python .cell-code}\ntrans = pd.read_csv(\"https://raw.githubusercontent.com/mthevenin/analyse_duree/master/bases/transplantation.csv\")\n\ntrans.head(10)\ntrans.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 103 entries, 0 to 102\nData columns (total 10 columns):\n #   Column      Non-Null Count  Dtype\n---  ------      --------------  -----\n 0   id          103 non-null    int64\n 1   year        103 non-null    int64\n 2   age         103 non-null    int64\n 3   died        103 non-null    int64\n 4   stime       103 non-null    int64\n 5   surgery     103 non-null    int64\n 6   transplant  103 non-null    int64\n 7   wait        103 non-null    int64\n 8   mois        103 non-null    int64\n 9   compet      103 non-null    int64\ndtypes: int64(10)\nmemory usage: 8.2 KB\n```\n:::\n:::\n\n\n## Package lifelines\n\n**Documentation**: <https://lifelines.readthedocs.io/en/latest/>\n\n\n### Non Paramétrique: Kaplan Meier\n\n#### Calcul des estimateurs\n\n**Estimateur KM et durée médiane**\n\n::: {#25a02511 .cell execution_count=4}\n``` {.python .cell-code}\nT = trans['stime']\nE = trans['died']\n\n\nfrom lifelines import KaplanMeierFitter\nkmf = KaplanMeierFitter()\nkmf.fit(T,E)\nprint(kmf.survival_function_)\na = \"DUREE MEDIANE:\"\nb = kmf.median_survival_time_\nprint(a,b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          KM_estimate\ntimeline             \n0.0          1.000000\n1.0          0.990291\n2.0          0.961165\n3.0          0.932039\n5.0          0.912621\n...               ...\n1400.0       0.151912\n1407.0       0.151912\n1571.0       0.151912\n1586.0       0.151912\n1799.0       0.151912\n\n[89 rows x 1 columns]\nDUREE MEDIANE: 100.0\n```\n:::\n:::\n\n\n::: {#e5b6dcb6 .cell execution_count=5}\n``` {.python .cell-code}\nkmf.plot()\n```\n\n::: {.cell-output .cell-output-display}\n![](17-Python_files/figure-html/cell-5-output-1.png){width=571 height=429}\n:::\n:::\n\n\n**Comparaison des fonctions de survie**\n\n::: {#4c18cf25 .cell execution_count=6}\n``` {.python .cell-code}\nax = plt.subplot(111)\nkmf = KaplanMeierFitter()\nfor name, grouped_df in trans.groupby('surgery'):\n    kmf.fit(grouped_df['stime'], grouped_df['died'], label=name)\n    kmf.plot(ax=ax)\n```\n\n::: {.cell-output .cell-output-display}\n![](17-Python_files/figure-html/cell-6-output-1.png){width=571 height=429}\n:::\n:::\n\n\n#### Tests du logrank\n\n::: {#85913d7c .cell execution_count=7}\n``` {.python .cell-code}\nfrom lifelines.statistics import multivariate_logrank_test\nresults = multivariate_logrank_test(trans['stime'], trans['surgery'], trans['died'])\nresults.print_summary()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>t_0</th>\n      <td>-1</td>\n    </tr>\n    <tr>\n      <th>null_distribution</th>\n      <td>chi squared</td>\n    </tr>\n    <tr>\n      <th>degrees_of_freedom</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>test_name</th>\n      <td>multivariate_logrank_test</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>test_statistic</th>\n      <th>p</th>\n      <th>-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6.59</td>\n      <td>0.01</td>\n      <td>6.61</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n#### Calcul des Rmst {#rmst}\n\n::: callout-note\n\n* Update 2024.\n* Programmation très lourde.\n* Pas de test de comparaison des RMST (différence ou ratio). \n\n:::\n\n* Chargement de la fonction\n\n::: {#b4fb4f51 .cell execution_count=8}\n``` {.python .cell-code}\nfrom lifelines.utils import restricted_mean_survival_time\n```\n:::\n\n\n* Définition de la valeur du groupe exposé (ici surgery égal à 1)\n\n::: {#5f95518f .cell execution_count=9}\n``` {.python .cell-code}\nix = trans['surgery'] == 1\n```\n:::\n\n\n* Définition de la durée maximale. Ici 1407 jours (idem R par défaut)\n\n::: {#6eb3afd1 .cell execution_count=10}\n``` {.python .cell-code}\ntmax = 1407\n```\n:::\n\n\n* Calcul des Rmst\n\n::: {#914cc358 .cell execution_count=11}\n``` {.python .cell-code}\nkmf_1 = KaplanMeierFitter().fit(T[ix], E[ix], label='Opérés')\nrmst_1 = restricted_mean_survival_time(kmf_1, t=tmax)\n\nkmf_0 = KaplanMeierFitter().fit(T[~ix], E[~ix], label='Non opérés')\nrmst_0 = restricted_mean_survival_time(kmf_0, t=tmax)\n```\n:::\n\n\nRmst pour surgery = 0\n\n::: {#f9716d55 .cell execution_count=12}\n``` {.python .cell-code}\nrmst_0\n```\n\n::: {.cell-output .cell-output-display execution_count=44}\n```\n379.14763007035475\n```\n:::\n:::\n\n\nRmst pour surgery = 1\n\n::: {#a81a1852 .cell execution_count=13}\n``` {.python .cell-code}\nrmst_1\n```\n\n::: {.cell-output .cell-output-display execution_count=45}\n```\n884.5757575757575\n```\n:::\n:::\n\n\n* Courbes des Rmst pour tmax = 1407\n\n::: {#7637548c .cell execution_count=14}\n``` {.python .cell-code}\nfrom matplotlib import pyplot as plt\nfrom lifelines.plotting import rmst_plot\n\nax = plt.subplot(311)\nrmst_plot(kmf_1, t=tmax, ax=ax)\n\nax = plt.subplot(312)\nrmst_plot(kmf_0, t=tmax, ax=ax)\n\nax = plt.subplot(313)\nrmst_plot(kmf_1, model2=kmf_0, t=tmax, ax=ax)\n```\n\n::: {.cell-output .cell-output-display}\n![](17-Python_files/figure-html/cell-14-output-1.png){width=579 height=434}\n:::\n:::\n\n\n### Semi paramétrique: Cox\n\n#### Estimation\n\n::: {#5bc854a8 .cell execution_count=15}\n``` {.python .cell-code}\nmodel = 'year + age + C(surgery) -1'\nX = pt.dmatrix(model, trans, return_type='dataframe')\ndesign_info = X.design_info\nYX = X.join(trans[['stime','died']])\nYX.drop(['C(surgery)[0]'], axis=1, inplace=True)\nYX.head()\n\n\nfrom lifelines import CoxPHFitter\ncph = CoxPHFitter()\ncph.fit(YX, duration_col='stime', event_col='died')\ncph.print_summary()\ncph.plot()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>model</th>\n      <td>lifelines.CoxPHFitter</td>\n    </tr>\n    <tr>\n      <th>duration col</th>\n      <td>'stime'</td>\n    </tr>\n    <tr>\n      <th>event col</th>\n      <td>'died'</td>\n    </tr>\n    <tr>\n      <th>baseline estimation</th>\n      <td>breslow</td>\n    </tr>\n    <tr>\n      <th>number of observations</th>\n      <td>103</td>\n    </tr>\n    <tr>\n      <th>number of events observed</th>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>partial log-likelihood</th>\n      <td>-289.31</td>\n    </tr>\n    <tr>\n      <th>time fit was run</th>\n      <td>2024-09-24 06:52:44 UTC</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\">coef</th>\n      <th style=\"min-width: 12px;\">exp(coef)</th>\n      <th style=\"min-width: 12px;\">se(coef)</th>\n      <th style=\"min-width: 12px;\">coef lower 95%</th>\n      <th style=\"min-width: 12px;\">coef upper 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) lower 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) upper 95%</th>\n      <th style=\"min-width: 12px;\">cmp to</th>\n      <th style=\"min-width: 12px;\">z</th>\n      <th style=\"min-width: 12px;\">p</th>\n      <th style=\"min-width: 12px;\">-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(surgery)[1]</th>\n      <td>-0.99</td>\n      <td>0.37</td>\n      <td>0.44</td>\n      <td>-1.84</td>\n      <td>-0.13</td>\n      <td>0.16</td>\n      <td>0.88</td>\n      <td>0.00</td>\n      <td>-2.26</td>\n      <td>0.02</td>\n      <td>5.40</td>\n    </tr>\n    <tr>\n      <th>year</th>\n      <td>-0.12</td>\n      <td>0.89</td>\n      <td>0.07</td>\n      <td>-0.25</td>\n      <td>0.01</td>\n      <td>0.78</td>\n      <td>1.01</td>\n      <td>0.00</td>\n      <td>-1.78</td>\n      <td>0.08</td>\n      <td>3.72</td>\n    </tr>\n    <tr>\n      <th>age</th>\n      <td>0.03</td>\n      <td>1.03</td>\n      <td>0.01</td>\n      <td>0.00</td>\n      <td>0.06</td>\n      <td>1.00</td>\n      <td>1.06</td>\n      <td>0.00</td>\n      <td>2.19</td>\n      <td>0.03</td>\n      <td>5.12</td>\n    </tr>\n  </tbody>\n</table><br><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>Concordance</th>\n      <td>0.65</td>\n    </tr>\n    <tr>\n      <th>Partial AIC</th>\n      <td>584.61</td>\n    </tr>\n    <tr>\n      <th>log-likelihood ratio test</th>\n      <td>17.63 on 3 df</td>\n    </tr>\n    <tr>\n      <th>-log2(p) of ll-ratio test</th>\n      <td>10.90</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](17-Python_files/figure-html/cell-15-output-2.png){width=638 height=429}\n:::\n:::\n\n\n<div style=\"margin-left:350px; margin-right: 300px\">\n\n#### Tests hypothèse PH\n\n**Test PH: Schoenfeld Méthode 1**  \n\n::: {#004678b6 .cell execution_count=16}\n``` {.python .cell-code}\ncph.check_assumptions(YX,p_value_threshold=0.05)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe ``p_value_threshold`` is set at 0.05. Even under the null hypothesis of no violations, some\ncovariates will be below the threshold by chance. This is compounded when there are many covariates.\nSimilarly, when there are lots of observations, even minor deviances from the proportional hazard\nassumption will be flagged.\n\nWith that in mind, it's best to use a combination of statistical tests and visual tests to determine\nthe most serious violations. Produce visual plots using ``check_assumptions(..., show_plots=True)``\nand looking for non-constant lines. See link [A] below for a full example.\n\n\n\n1. Variable 'C(surgery)[1]' failed the non-proportional test: p-value is 0.0452.\n\n   Advice: with so few unique values (only 2), you can include `strata=['C(surgery)[1]', ...]` in\nthe call in `.fit`. See documentation in link [E] below.\n\n---\n[A]  https://lifelines.readthedocs.io/en/latest/jupyter_notebooks/Proportional%20hazard%20assumption.html\n[B]  https://lifelines.readthedocs.io/en/latest/jupyter_notebooks/Proportional%20hazard%20assumption.html#Bin-variable-and-stratify-on-it\n[C]  https://lifelines.readthedocs.io/en/latest/jupyter_notebooks/Proportional%20hazard%20assumption.html#Introduce-time-varying-covariates\n[D]  https://lifelines.readthedocs.io/en/latest/jupyter_notebooks/Proportional%20hazard%20assumption.html#Modify-the-functional-form\n[E]  https://lifelines.readthedocs.io/en/latest/jupyter_notebooks/Proportional%20hazard%20assumption.html#Stratification\n\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>null_distribution</th>\n      <td>chi squared</td>\n    </tr>\n    <tr>\n      <th>degrees_of_freedom</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>model</th>\n      <td>&lt;lifelines.CoxPHFitter: fitted with 103 total ...</td>\n    </tr>\n    <tr>\n      <th>test_name</th>\n      <td>proportional_hazard_test</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>test_statistic</th>\n      <th>p</th>\n      <th>-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">C(surgery)[1]</th>\n      <th>km</th>\n      <td>4.01</td>\n      <td>0.05</td>\n      <td>4.47</td>\n    </tr>\n    <tr>\n      <th>rank</th>\n      <td>3.74</td>\n      <td>0.05</td>\n      <td>4.23</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">age</th>\n      <th>km</th>\n      <td>1.18</td>\n      <td>0.28</td>\n      <td>1.86</td>\n    </tr>\n    <tr>\n      <th>rank</th>\n      <td>1.06</td>\n      <td>0.30</td>\n      <td>1.72</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">year</th>\n      <th>km</th>\n      <td>2.07</td>\n      <td>0.15</td>\n      <td>2.73</td>\n    </tr>\n    <tr>\n      <th>rank</th>\n      <td>2.08</td>\n      <td>0.15</td>\n      <td>2.75</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=48}\n```\n[]\n```\n:::\n:::\n\n\n**Test PH: Schoenfeld Méthode 2**  \n\n::: {#df7ea2fa .cell execution_count=17}\n``` {.python .cell-code}\nfrom lifelines.statistics import  proportional_hazard_test \nzph = proportional_hazard_test(cph, YX, time_transform='all')\nzph.print_summary()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>null_distribution</th>\n      <td>chi squared</td>\n    </tr>\n    <tr>\n      <th>degrees_of_freedom</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>model</th>\n      <td>&lt;lifelines.CoxPHFitter: fitted with 103 total ...</td>\n    </tr>\n    <tr>\n      <th>test_name</th>\n      <td>proportional_hazard_test</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>test_statistic</th>\n      <th>p</th>\n      <th>-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">C(surgery)[1]</th>\n      <th>identity</th>\n      <td>5.54</td>\n      <td>0.02</td>\n      <td>5.75</td>\n    </tr>\n    <tr>\n      <th>km</th>\n      <td>4.01</td>\n      <td>0.05</td>\n      <td>4.47</td>\n    </tr>\n    <tr>\n      <th>log</th>\n      <td>3.69</td>\n      <td>0.05</td>\n      <td>4.19</td>\n    </tr>\n    <tr>\n      <th>rank</th>\n      <td>3.74</td>\n      <td>0.05</td>\n      <td>4.23</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">age</th>\n      <th>identity</th>\n      <td>1.61</td>\n      <td>0.20</td>\n      <td>2.29</td>\n    </tr>\n    <tr>\n      <th>km</th>\n      <td>1.18</td>\n      <td>0.28</td>\n      <td>1.86</td>\n    </tr>\n    <tr>\n      <th>log</th>\n      <td>0.61</td>\n      <td>0.44</td>\n      <td>1.20</td>\n    </tr>\n    <tr>\n      <th>rank</th>\n      <td>1.06</td>\n      <td>0.30</td>\n      <td>1.72</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">year</th>\n      <th>identity</th>\n      <td>0.80</td>\n      <td>0.37</td>\n      <td>1.43</td>\n    </tr>\n    <tr>\n      <th>km</th>\n      <td>2.07</td>\n      <td>0.15</td>\n      <td>2.73</td>\n    </tr>\n    <tr>\n      <th>log</th>\n      <td>1.34</td>\n      <td>0.25</td>\n      <td>2.02</td>\n    </tr>\n    <tr>\n      <th>rank</th>\n      <td>2.08</td>\n      <td>0.15</td>\n      <td>2.75</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n**Test PH: intéraction**\n\n::: {#42ed6f14 .cell execution_count=18}\n``` {.python .cell-code}\nfrom lifelines.utils import to_episodic_format\nfrom lifelines import CoxTimeVaryingFitter\n```\n:::\n\n\n*Transformation de la base YX*  \n\n::: {#82fad186 .cell execution_count=19}\n``` {.python .cell-code}\nlong = to_episodic_format(YX, duration_col='stime', event_col='died')\n```\n:::\n\n\n*Création de la variable d'intéraction*  \n\n::: {#64c95742 .cell execution_count=20}\n``` {.python .cell-code}\nlong['surgery_t'] = long['C(surgery)[1]'] * long['stop']\n```\n:::\n\n\n*Estimation*  \n\n::: {#e976404b .cell execution_count=21}\n``` {.python .cell-code}\nctv = CoxTimeVaryingFitter()\nctv.fit(long,\n        id_col='id',\n        event_col='died',\n        start_col='start',\n        stop_col='stop',)\nctv.print_summary(4)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>model</th>\n      <td>lifelines.CoxTimeVaryingFitter</td>\n    </tr>\n    <tr>\n      <th>event col</th>\n      <td>'died'</td>\n    </tr>\n    <tr>\n      <th>number of subjects</th>\n      <td>103</td>\n    </tr>\n    <tr>\n      <th>number of periods</th>\n      <td>31938</td>\n    </tr>\n    <tr>\n      <th>number of events</th>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>partial log-likelihood</th>\n      <td>-287.3290</td>\n    </tr>\n    <tr>\n      <th>time fit was run</th>\n      <td>2024-09-24 06:52:44 UTC</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\">coef</th>\n      <th style=\"min-width: 12px;\">exp(coef)</th>\n      <th style=\"min-width: 12px;\">se(coef)</th>\n      <th style=\"min-width: 12px;\">coef lower 95%</th>\n      <th style=\"min-width: 12px;\">coef upper 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) lower 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) upper 95%</th>\n      <th style=\"min-width: 12px;\">cmp to</th>\n      <th style=\"min-width: 12px;\">z</th>\n      <th style=\"min-width: 12px;\">p</th>\n      <th style=\"min-width: 12px;\">-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(surgery)[1]</th>\n      <td>-1.7547</td>\n      <td>0.1730</td>\n      <td>0.6744</td>\n      <td>-3.0765</td>\n      <td>-0.4330</td>\n      <td>0.0461</td>\n      <td>0.6486</td>\n      <td>0.0000</td>\n      <td>-2.6020</td>\n      <td>0.0093</td>\n      <td>6.7533</td>\n    </tr>\n    <tr>\n      <th>age</th>\n      <td>0.0289</td>\n      <td>1.0293</td>\n      <td>0.0134</td>\n      <td>0.0025</td>\n      <td>0.0552</td>\n      <td>1.0025</td>\n      <td>1.0568</td>\n      <td>0.0000</td>\n      <td>2.1479</td>\n      <td>0.0317</td>\n      <td>4.9785</td>\n    </tr>\n    <tr>\n      <th>year</th>\n      <td>-0.1231</td>\n      <td>0.8842</td>\n      <td>0.0668</td>\n      <td>-0.2541</td>\n      <td>0.0079</td>\n      <td>0.7756</td>\n      <td>1.0080</td>\n      <td>0.0000</td>\n      <td>-1.8415</td>\n      <td>0.0656</td>\n      <td>3.9312</td>\n    </tr>\n    <tr>\n      <th>surgery_t</th>\n      <td>0.0022</td>\n      <td>1.0022</td>\n      <td>0.0011</td>\n      <td>0.0001</td>\n      <td>0.0044</td>\n      <td>1.0001</td>\n      <td>1.0044</td>\n      <td>0.0000</td>\n      <td>2.0239</td>\n      <td>0.0430</td>\n      <td>4.5400</td>\n    </tr>\n  </tbody>\n</table><br><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>Partial AIC</th>\n      <td>582.6581</td>\n    </tr>\n    <tr>\n      <th>log-likelihood ratio test</th>\n      <td>21.5846 on 4 df</td>\n    </tr>\n    <tr>\n      <th>-log2(p) of ll-ratio test</th>\n      <td>12.0103</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<div style=\"margin-left:350px; margin-right: 300px\">\n\n### Modèle à temps discret\n\n#### Ajustement continu\n\nModèle logistique estimé avec le paquet `statsmodel`. La fonction `to_episodic_format` de `lifelines` permet de mettre en forme la base.  \nPour la  durée, on utilisera ici la variable **mois** (regroupement de stime par intervalle de 30 jours).\n\n::: {#c88623b4 .cell execution_count=22}\n``` {.python .cell-code}\nimport statsmodels.formula.api as smf #type R formule => ce qu'on utilisera#\nimport statsmodels.api as sm #type python#\n```\n:::\n\n\n**Transformation de la base en format long**  \n\n::: {#ed1572e7 .cell execution_count=23}\n``` {.python .cell-code}\ntd = pd.read_csv(\"https://raw.githubusercontent.com/mthevenin/analyse_duree/master/bases/transplantation.csv\")\ntd.drop(['id'], axis=1, inplace=True)\ntd['dur'] = td['mois']\ntd = to_episodic_format(td, duration_col='mois', event_col='died')\n```\n:::\n\n\n**Evaluation de l'ajustement avec des fonctions quadratiques**  \n\n::: {#c4dc1197 .cell execution_count=24}\n``` {.python .cell-code}\ntd['t2'] = td['stop']**2\ntd['t3'] = td['stop']**3\nfit1 = smf.glm(formula=  \"died ~ stop\", data=td, family=sm.families.Binomial()).fit()\nfit2 = smf.glm(formula=  \"died ~ stop + t2\", data=td, family=sm.families.Binomial()).fit()\nfit3 = smf.glm(formula=  \"died ~ stop + t2 + t3\", data=td, family=sm.families.Binomial()).fit()\n```\n:::\n\n\n**Comparaison des AIC**  \n\n::: {#ec150785 .cell execution_count=25}\n``` {.python .cell-code}\nprint(\"AIC pour ajustement t1\")\nprint(fit1.aic)\nprint(\"AIC pour ajustement durée t1 + t2\")\nprint(fit2.aic)\nprint(\"AIC pour ajustement durée t1 + t2 + t3\")\nprint(fit3.aic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAIC pour ajustement t1\n504.5211512753311\nAIC pour ajustement durée t1 + t2\n492.11522432726747\nAIC pour ajustement durée t1 + t2 + t3\n486.50534103180416\n```\n:::\n:::\n\n\n**Estimation du modèle** \n\n::: {#ea916474 .cell execution_count=26}\n``` {.python .cell-code}\ntdfit = smf.glm(formula=  \"died ~ stop + t2 + t3 + year + age + surgery\", data=td, family=sm.families.Binomial()).fit()\ntdfit.summary()\n```\n\n::: {.cell-output .cell-output-display execution_count=58}\n```{=html}\n<table class=\"simpletable\">\n<caption>Generalized Linear Model Regression Results</caption>\n<tr>\n  <th>Dep. Variable:</th>         <td>died</td>       <th>  No. Observations:  </th>  <td>  1127</td> \n</tr>\n<tr>\n  <th>Model:</th>                  <td>GLM</td>       <th>  Df Residuals:      </th>  <td>  1120</td> \n</tr>\n<tr>\n  <th>Model Family:</th>        <td>Binomial</td>     <th>  Df Model:          </th>  <td>     6</td> \n</tr>\n<tr>\n  <th>Link Function:</th>         <td>Logit</td>      <th>  Scale:             </th> <td>  1.0000</td>\n</tr>\n<tr>\n  <th>Method:</th>                <td>IRLS</td>       <th>  Log-Likelihood:    </th> <td> -230.34</td>\n</tr>\n<tr>\n  <th>Date:</th>            <td>Tue, 24 Sep 2024</td> <th>  Deviance:          </th> <td>  460.67</td>\n</tr>\n<tr>\n  <th>Time:</th>                <td>08:52:48</td>     <th>  Pearson chi2:      </th> <td>1.30e+03</td>\n</tr>\n<tr>\n  <th>No. Iterations:</th>          <td>7</td>        <th>  Pseudo R-squ. (CS):</th>  <td>0.07732</td>\n</tr>\n<tr>\n  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n      <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>Intercept</th> <td>    7.0827</td> <td>    5.308</td> <td>    1.334</td> <td> 0.182</td> <td>   -3.320</td> <td>   17.486</td>\n</tr>\n<tr>\n  <th>stop</th>      <td>   -0.3721</td> <td>    0.082</td> <td>   -4.516</td> <td> 0.000</td> <td>   -0.534</td> <td>   -0.211</td>\n</tr>\n<tr>\n  <th>t2</th>        <td>    0.0142</td> <td>    0.005</td> <td>    2.835</td> <td> 0.005</td> <td>    0.004</td> <td>    0.024</td>\n</tr>\n<tr>\n  <th>t3</th>        <td>   -0.0002</td> <td> 7.85e-05</td> <td>   -2.113</td> <td> 0.035</td> <td>   -0.000</td> <td> -1.2e-05</td>\n</tr>\n<tr>\n  <th>year</th>      <td>   -0.1327</td> <td>    0.074</td> <td>   -1.798</td> <td> 0.072</td> <td>   -0.277</td> <td>    0.012</td>\n</tr>\n<tr>\n  <th>age</th>       <td>    0.0333</td> <td>    0.015</td> <td>    2.270</td> <td> 0.023</td> <td>    0.005</td> <td>    0.062</td>\n</tr>\n<tr>\n  <th>surgery</th>   <td>   -1.0109</td> <td>    0.449</td> <td>   -2.254</td> <td> 0.024</td> <td>   -1.890</td> <td>   -0.132</td>\n</tr>\n</table>\n```\n:::\n:::\n\n\n#### Ajustement discret\n\n*Création des intervalles pour l'exemple (quantile de la durée en mois)*\n\n::: {#56ce3c7c .cell execution_count=27}\n``` {.python .cell-code}\ntd['ct4'] = pd.qcut(td['stop'],[0, .25, .5, .75, 1.]) \ntd['ct4'].value_counts(normalize=True)*100\ntd.ct4 = pd.Categorical(td.ct4)\ntd['ct4'] = td.ct4.cat.codes\n```\n:::\n\n\nPour chaque individu, on conserve une seule observation par intervalle.\n\n::: {#f6aab7bf .cell execution_count=28}\n``` {.python .cell-code}\ntd2 = td \ntd2['t'] = td2['ct4']\ntd2 = td2.sort_values(['id', 'stop'])\ntd2 =  td2.groupby(['id','ct4']).last()\n```\n:::\n\n\n**Estimation**   \n\n::: {#33431b18 .cell execution_count=29}\n``` {.python .cell-code}\ntd2fit = smf.glm(formula=  \"died ~ C(t) +  year + age + surgery\", data=td2, family=sm.families.Binomial()).fit()\ntd2fit.summary()\n```\n\n::: {.cell-output .cell-output-display execution_count=61}\n```{=html}\n<table class=\"simpletable\">\n<caption>Generalized Linear Model Regression Results</caption>\n<tr>\n  <th>Dep. Variable:</th>         <td>died</td>       <th>  No. Observations:  </th>  <td>   197</td> \n</tr>\n<tr>\n  <th>Model:</th>                  <td>GLM</td>       <th>  Df Residuals:      </th>  <td>   190</td> \n</tr>\n<tr>\n  <th>Model Family:</th>        <td>Binomial</td>     <th>  Df Model:          </th>  <td>     6</td> \n</tr>\n<tr>\n  <th>Link Function:</th>         <td>Logit</td>      <th>  Scale:             </th> <td>  1.0000</td>\n</tr>\n<tr>\n  <th>Method:</th>                <td>IRLS</td>       <th>  Log-Likelihood:    </th> <td> -111.24</td>\n</tr>\n<tr>\n  <th>Date:</th>            <td>Tue, 24 Sep 2024</td> <th>  Deviance:          </th> <td>  222.48</td>\n</tr>\n<tr>\n  <th>Time:</th>                <td>08:52:48</td>     <th>  Pearson chi2:      </th>  <td>  221.</td> \n</tr>\n<tr>\n  <th>No. Iterations:</th>          <td>4</td>        <th>  Pseudo R-squ. (CS):</th>  <td>0.1808</td> \n</tr>\n<tr>\n  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n      <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>Intercept</th> <td>   12.4467</td> <td>    6.654</td> <td>    1.871</td> <td> 0.061</td> <td>   -0.594</td> <td>   25.488</td>\n</tr>\n<tr>\n  <th>C(t)[T.1]</th> <td>   -1.0334</td> <td>    0.419</td> <td>   -2.467</td> <td> 0.014</td> <td>   -1.854</td> <td>   -0.212</td>\n</tr>\n<tr>\n  <th>C(t)[T.2]</th> <td>   -1.6152</td> <td>    0.545</td> <td>   -2.965</td> <td> 0.003</td> <td>   -2.683</td> <td>   -0.547</td>\n</tr>\n<tr>\n  <th>C(t)[T.3]</th> <td>   -0.4789</td> <td>    0.599</td> <td>   -0.799</td> <td> 0.424</td> <td>   -1.654</td> <td>    0.696</td>\n</tr>\n<tr>\n  <th>year</th>      <td>   -0.2032</td> <td>    0.093</td> <td>   -2.181</td> <td> 0.029</td> <td>   -0.386</td> <td>   -0.021</td>\n</tr>\n<tr>\n  <th>age</th>       <td>    0.0469</td> <td>    0.018</td> <td>    2.533</td> <td> 0.011</td> <td>    0.011</td> <td>    0.083</td>\n</tr>\n<tr>\n  <th>surgery</th>   <td>   -1.1102</td> <td>    0.503</td> <td>   -2.209</td> <td> 0.027</td> <td>   -2.095</td> <td>   -0.125</td>\n</tr>\n</table>\n```\n:::\n:::\n\n\n<div style=\"margin-left:350px; margin-right: 300px\">\n\n### Modèle paramétrique de type AFT\n\n::: {#1ef25ae9 .cell execution_count=30}\n``` {.python .cell-code}\nfrom lifelines import WeibullAFTFitter, LogLogisticAFTFitter\n```\n:::\n\n\n**Weibull**    \n\n::: {#ee20a661 .cell execution_count=31}\n``` {.python .cell-code}\naftw = WeibullAFTFitter()\naftw.fit(YX, duration_col='stime', event_col='died')\naftw.print_summary()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>model</th>\n      <td>lifelines.WeibullAFTFitter</td>\n    </tr>\n    <tr>\n      <th>duration col</th>\n      <td>'stime'</td>\n    </tr>\n    <tr>\n      <th>event col</th>\n      <td>'died'</td>\n    </tr>\n    <tr>\n      <th>number of observations</th>\n      <td>103</td>\n    </tr>\n    <tr>\n      <th>number of events observed</th>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>log-likelihood</th>\n      <td>-488.17</td>\n    </tr>\n    <tr>\n      <th>time fit was run</th>\n      <td>2024-09-24 06:52:48 UTC</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\">coef</th>\n      <th style=\"min-width: 12px;\">exp(coef)</th>\n      <th style=\"min-width: 12px;\">se(coef)</th>\n      <th style=\"min-width: 12px;\">coef lower 95%</th>\n      <th style=\"min-width: 12px;\">coef upper 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) lower 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) upper 95%</th>\n      <th style=\"min-width: 12px;\">cmp to</th>\n      <th style=\"min-width: 12px;\">z</th>\n      <th style=\"min-width: 12px;\">p</th>\n      <th style=\"min-width: 12px;\">-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">lambda_</th>\n      <th>C(surgery)[1]</th>\n      <td>1.97</td>\n      <td>7.17</td>\n      <td>0.78</td>\n      <td>0.44</td>\n      <td>3.50</td>\n      <td>1.56</td>\n      <td>33.05</td>\n      <td>0.00</td>\n      <td>2.53</td>\n      <td>0.01</td>\n      <td>6.45</td>\n    </tr>\n    <tr>\n      <th>age</th>\n      <td>-0.06</td>\n      <td>0.94</td>\n      <td>0.02</td>\n      <td>-0.11</td>\n      <td>-0.01</td>\n      <td>0.90</td>\n      <td>0.99</td>\n      <td>0.00</td>\n      <td>-2.49</td>\n      <td>0.01</td>\n      <td>6.28</td>\n    </tr>\n    <tr>\n      <th>year</th>\n      <td>0.16</td>\n      <td>1.18</td>\n      <td>0.12</td>\n      <td>-0.08</td>\n      <td>0.40</td>\n      <td>0.93</td>\n      <td>1.49</td>\n      <td>0.00</td>\n      <td>1.33</td>\n      <td>0.18</td>\n      <td>2.44</td>\n    </tr>\n    <tr>\n      <th>Intercept</th>\n      <td>-3.02</td>\n      <td>0.05</td>\n      <td>8.73</td>\n      <td>-20.13</td>\n      <td>14.09</td>\n      <td>0.00</td>\n      <td>1.31e+06</td>\n      <td>0.00</td>\n      <td>-0.35</td>\n      <td>0.73</td>\n      <td>0.46</td>\n    </tr>\n    <tr>\n      <th>rho_</th>\n      <th>Intercept</th>\n      <td>-0.59</td>\n      <td>0.56</td>\n      <td>0.09</td>\n      <td>-0.77</td>\n      <td>-0.41</td>\n      <td>0.46</td>\n      <td>0.67</td>\n      <td>0.00</td>\n      <td>-6.33</td>\n      <td>&lt;0.005</td>\n      <td>31.93</td>\n    </tr>\n  </tbody>\n</table><br><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>Concordance</th>\n      <td>0.65</td>\n    </tr>\n    <tr>\n      <th>AIC</th>\n      <td>986.34</td>\n    </tr>\n    <tr>\n      <th>log-likelihood ratio test</th>\n      <td>18.87 on 3 df</td>\n    </tr>\n    <tr>\n      <th>-log2(p) of ll-ratio test</th>\n      <td>11.75</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<div style=\"margin-left:350px; margin-right: 300px\">\n\n**Loglogistique**   \n\n::: {#72c2ad90 .cell execution_count=32}\n``` {.python .cell-code}\naftl = LogLogisticAFTFitter()\naftl.fit(YX, duration_col='stime', event_col='died')\naftl.print_summary()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>model</th>\n      <td>lifelines.LogLogisticAFTFitter</td>\n    </tr>\n    <tr>\n      <th>duration col</th>\n      <td>'stime'</td>\n    </tr>\n    <tr>\n      <th>event col</th>\n      <td>'died'</td>\n    </tr>\n    <tr>\n      <th>number of observations</th>\n      <td>103</td>\n    </tr>\n    <tr>\n      <th>number of events observed</th>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>log-likelihood</th>\n      <td>-482.58</td>\n    </tr>\n    <tr>\n      <th>time fit was run</th>\n      <td>2024-09-24 06:52:48 UTC</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\">coef</th>\n      <th style=\"min-width: 12px;\">exp(coef)</th>\n      <th style=\"min-width: 12px;\">se(coef)</th>\n      <th style=\"min-width: 12px;\">coef lower 95%</th>\n      <th style=\"min-width: 12px;\">coef upper 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) lower 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) upper 95%</th>\n      <th style=\"min-width: 12px;\">cmp to</th>\n      <th style=\"min-width: 12px;\">z</th>\n      <th style=\"min-width: 12px;\">p</th>\n      <th style=\"min-width: 12px;\">-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">alpha_</th>\n      <th>C(surgery)[1]</th>\n      <td>2.27</td>\n      <td>9.70</td>\n      <td>0.69</td>\n      <td>0.92</td>\n      <td>3.63</td>\n      <td>2.50</td>\n      <td>37.56</td>\n      <td>0.00</td>\n      <td>3.29</td>\n      <td>&lt;0.005</td>\n      <td>9.95</td>\n    </tr>\n    <tr>\n      <th>age</th>\n      <td>-0.04</td>\n      <td>0.96</td>\n      <td>0.02</td>\n      <td>-0.08</td>\n      <td>-0.00</td>\n      <td>0.92</td>\n      <td>1.00</td>\n      <td>0.00</td>\n      <td>-2.01</td>\n      <td>0.04</td>\n      <td>4.48</td>\n    </tr>\n    <tr>\n      <th>year</th>\n      <td>0.24</td>\n      <td>1.27</td>\n      <td>0.12</td>\n      <td>0.01</td>\n      <td>0.47</td>\n      <td>1.01</td>\n      <td>1.60</td>\n      <td>0.00</td>\n      <td>2.06</td>\n      <td>0.04</td>\n      <td>4.66</td>\n    </tr>\n    <tr>\n      <th>Intercept</th>\n      <td>-10.43</td>\n      <td>0.00</td>\n      <td>8.34</td>\n      <td>-26.77</td>\n      <td>5.92</td>\n      <td>0.00</td>\n      <td>372.19</td>\n      <td>0.00</td>\n      <td>-1.25</td>\n      <td>0.21</td>\n      <td>2.24</td>\n    </tr>\n    <tr>\n      <th>beta_</th>\n      <th>Intercept</th>\n      <td>-0.18</td>\n      <td>0.84</td>\n      <td>0.10</td>\n      <td>-0.37</td>\n      <td>0.01</td>\n      <td>0.69</td>\n      <td>1.01</td>\n      <td>0.00</td>\n      <td>-1.86</td>\n      <td>0.06</td>\n      <td>3.99</td>\n    </tr>\n  </tbody>\n</table><br><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>Concordance</th>\n      <td>0.66</td>\n    </tr>\n    <tr>\n      <th>AIC</th>\n      <td>975.16</td>\n    </tr>\n    <tr>\n      <th>log-likelihood ratio test</th>\n      <td>21.69 on 3 df</td>\n    </tr>\n    <tr>\n      <th>-log2(p) of ll-ratio test</th>\n      <td>13.69</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<div style=\"margin-left:350px; margin-right: 300px\">\n## Package statsmodels\n\n\n<https://www.statsmodels.org/dev/duration.html>\n\nLe package permet d'estimer des fonctions de séjour de type Kaplan-Meier et des modèles de Cox.\n\n### Kaplan-Meier\n\n::: {#ed2db7de .cell execution_count=33}\n``` {.python .cell-code}\nkm = sm.SurvfuncRight(trans[\"stime\"], trans[\"died\"])\nkm.summary()\n```\n\n::: {.cell-output .cell-output-display execution_count=65}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Surv prob</th>\n      <th>Surv prob SE</th>\n      <th>num at risk</th>\n      <th>num events</th>\n    </tr>\n    <tr>\n      <th>Time</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.990291</td>\n      <td>0.009661</td>\n      <td>103</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.961165</td>\n      <td>0.019037</td>\n      <td>102</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.932039</td>\n      <td>0.024799</td>\n      <td>99</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.912621</td>\n      <td>0.027825</td>\n      <td>96</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.893204</td>\n      <td>0.030432</td>\n      <td>94</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>852</th>\n      <td>0.250655</td>\n      <td>0.048731</td>\n      <td>14</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>979</th>\n      <td>0.227868</td>\n      <td>0.049341</td>\n      <td>11</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>995</th>\n      <td>0.205081</td>\n      <td>0.049390</td>\n      <td>10</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1032</th>\n      <td>0.182295</td>\n      <td>0.048877</td>\n      <td>9</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1386</th>\n      <td>0.151912</td>\n      <td>0.049277</td>\n      <td>6</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>62 rows × 4 columns</p>\n</div>\n```\n:::\n:::\n\n\nLes test du log-rank sont disponibles avec la fonction `survdiff` (nom idem R). Au niveau graphique, la programmation semble un peu\nlourde et mériterait d'être simplifiée (donc non traitée).  \n\n**Comparaison de S(t) à partir des tests du log-rank**  \n\n<br>\nRésultat: (statistique de test, p-value)\n\n*Test non pondéré*\n\n::: {#56b4c024 .cell execution_count=34}\n``` {.python .cell-code}\nsm.duration.survdiff(trans.stime, trans.died, trans.surgery)\n```\n\n::: {.cell-output .cell-output-display execution_count=66}\n```\n(6.5900123232343875, 0.010255246157888975)\n```\n:::\n:::\n\n\n*Breslow*\n\n::: {#6465945d .cell execution_count=35}\n``` {.python .cell-code}\nsm.duration.survdiff(trans.stime, trans.died, trans.surgery, weight_type='gb')\n```\n\n::: {.cell-output .cell-output-display execution_count=67}\n```\n(8.989753779902493, 0.0027149757927903417)\n```\n:::\n:::\n\n\n*Tarone-Ware*\n\n::: {#c198a02c .cell execution_count=36}\n``` {.python .cell-code}\nsm.duration.survdiff(trans.stime, trans.died, trans.surgery, weight_type='tw')\n```\n\n::: {.cell-output .cell-output-display execution_count=68}\n```\n(8.462352726451392, 0.0036257256194570653)\n```\n:::\n:::\n\n\n### Modèle de Cox\n\n::: {#cff42685 .cell execution_count=37}\n``` {.python .cell-code}\nmod = smf.phreg(\"stime ~  year + age + surgery \",trans, status='died', ties=\"efron\")\nrslt = mod.fit()\nprint(rslt.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       Results: PHReg\n=============================================================\nModel:                    PH Reg       Sample size:       103\nDependent variable:       stime        Num. events:       75 \nTies:                     Efron                              \n-------------------------------------------------------------\n         log HR log HR SE   HR      t    P>|t|  [0.025 0.975]\n-------------------------------------------------------------\nyear    -0.1196    0.0673 0.8872 -1.7765 0.0757 0.7775 1.0124\nage      0.0296    0.0135 1.0300  2.1872 0.0287 1.0031 1.0577\nsurgery -0.9873    0.4363 0.3726 -2.2632 0.0236 0.1584 0.8761\n=============================================================\nConfidence intervals are for the hazard ratios\n```\n:::\n:::\n\n\n</div>\n\n",
    "supporting": [
      "17-Python_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}